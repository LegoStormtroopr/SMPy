#! /bin/bash                                                                                                          
set -e
echo -n "THE FOLLOWING STEPS WILL LAUNCH YOUR BROWSER (type [ENTER] to continue)"
read asdf
echo -n "Have you set up your AWS account? (type [ENTER] to continue) "
open https://aws-portal.amazon.com/gp/aws/developer/registration/index.html
read asdf
echo -n "Have you set up an MTurk Requester account? (type [ENTER] to continue)"
open http://requester.mturk.com/
read asdf
echo "Set up an access key and be ready to provide the access key ID and the Secret Access Key (type [ENTER] to continue)"
open https://portal.aws.amazon.com/gp/aws/securityCredentials
read asdf

if [[ ! -d $HOME/dev ]] ; then
    mkdir $HOME/dev
fi

# get clt
echo "We will now download the sdk to $HOME/dev"
echo ""
if [[ -e $HOME/dev/aws-mturk-clt.tar.gz ]]; then
    rm $HOME/dev/aws-mturk-clt.tar.gz
fi
if [[ -d $HOME/dev/aws-mturk-clt-1.1.1 ]]; then
    rm -r $HOME/dev/aws-mturk-clt-1.1.1
    rmdir $HOME/dev/aws-mturk-clt-1.1.1
fi
cd $HOME/dev
if [[ -e aws-mturk-clt.tar.gz ]] ; then
    rm -rf aws-mturk-clt*
fi
wget http://mturk.s3.amazonaws.com/CLTSource/aws-mturk-clt.tar.gz 
tar -xzf aws-mturk-clt.tar.gz

# set keys
echo "Paste your access key id: "
read k1
echo "Paste your secret access key: "
read k2
file="$HOME/dev/aws-mturk-clt-1.3.1/bin/mturk.properties"
lineno=`grep -n ^access_key $file | cut -f1 -d:`
f="`head -n$((lineno-1)) $file`
access_key=$k1
secret_key=$k2"
lineno=$((lineno+2))

# set urls to use https
for line in $( grep -n "service_url=" $file ); do
    # get the line number that we want to modify
    ln=`echo $line | cut -f1 -d:`
    # get the contents that we want to modify
    contents=`echo $line | cut -f2,3 -d:`
    if [[ `echo $contents | grep sandbox` != "" && ${contents:0:1} == "#" ]]
    then 
	# if we aren't in sandbox mode, uncomment to set us in sandbox mode
	contents=${contents:1}
    elif [[ `echo $contents | grep sandbox` == "" && ${contents:0:1} != "#" ]]
    then 
	# if we are in live mode, comment to prevent us from posting
	contents="#$contents"
    fi	
    f="$f
`head -n$((ln-1)) $file | tail -n$((ln-lineno))`
`echo $contents | cut -f1 -d:`s:`echo $contents | cut -f2 -d:`
"
    lineno=$((ln+1))
done

# append everything
lines=`wc -l $file | awk '{print $1}'`
newlineno=$((lines - lineno))
g=`tail -n$newlineno $file`
echo "$f
$g" > "$file"

cd $HOME
if [[ ! -e .bash_profile ]]
then
    echo "# set environment variables and customize your shell here
" > .bash_profile
fi

brc=`cat .bash_profile`

MTURK_CMD_HOME=`echo $MTURK_CMD_HOME`

if [[ `grep MTURK_CMD_HOME .bash_profile` = "" ]] ; then
    MTURK_CMD_HOME="$HOME/dev/aws-mturk-clt-1.3.1"
    export MTURK_CMD_HOME=$MTURK_CMD_HOME
    brc="$brc
export MTURK_CMD_HOME=$HOME/dev/aws-mturk-clt-1.3.1"
elif [[ $MTURK_CMD_HOME = "" ]]; then
    MTURK_CMD_HOME="$HOME/dev/aws-mturk-clt-1.3.1"
    export MTURK_CMD_HOME="$HOME/dev/aws-mturk-clt-1.3.1"
fi

#echo "MTURK_CMD_HOME=$MTURK_CMD_HOME"

JAVA_HOME=`echo $JAVA_HOME`

if [[ `grep JAVA_HOME .bash_profile` = "" ]] ; then
    echo "You are about to be prompted for your su password"
    for f in $( sudo find -L / -type f -regex ".*/bin/java" 2> /dev/null ); do
	if [[ ! -h $f && ! -L $f && ${f:(-9)} == /bin/java && ${f:0:1} == / ]] ; then
	    JAVA_HOME="${f%%/bin/java}"
	    export JAVA_HOME=$JAVA_HOME
#	    echo "JAVA_HOME=$JAVA_HOME"
	    brc="$brc
export JAVA_HOME=${f%%/bin/java}"
	    break
	fi
    done
elif [[ $JAVA_HOME = "" ]]; then
    JAVA_HOME=`grep JAVA_HOME ~/.bash_profile | cut -f2 -d=`
    export JAVA_HOME=$JAVA_HOME
#    echo "JAVA_HOME=`set | grep JAVA_HOME=`"
fi

# create MTURK_CLASSPATH for java to use
if [[ `grep MTURK_CLASSPATH .bash_profile` = "" ]]; then
    MTURK_CLASSPATH=""
#    echo $MTURK_CMD_HOME
    jars=`find $MTURK_CMD_HOME/lib | grep .jar$`
    for jar in $jars; do
	if [[ $MTURK_CLASSPATH = "" ]]; then
	    MTURK_CLASSPATH=$MTURK_CMD_HOME/lib/$jar
	else
	    MTURK_CLASSPATH=$MTURK_CLASSPATH:$MTURK_CMD_HOME/lib/$jar
	fi
    done
    export MTURK_CLASSPATH="$MTURK_CLASSPATH"
#    echo "MTURK_CLASSPATH=$MTURK_CLASSPATH"
    brc="$brc
export MTURK_CLASSPATH=$MTURK_CLASSPATH"
fi

echo "$brc" > .bash_profile

echo "We will now test to see if everything is set up properly..."
cd $MTURK_CMD_HOME/bin
./getBalance.sh

echo "Setup Complete!"
